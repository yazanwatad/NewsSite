@page
@model NewsSite.Pages.LoginModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["HeaderData"] = Model.HeaderData;
    ViewData["Title"] = "Login";
}


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container d-flex align-items-center justify-content-center min-vh-100">
    <div class="card shadow p-4" style="max-width: 400px; width: 100%;">
        <h2 class="text-center mb-4">Login</h2>
        <form id="loginForm">
            <div class="mb-3">
                <label asp-for="Username" class="form-label">Username</label>
                <input asp-for="Username" class="form-control" id="usernameInput" autocomplete="username" required />
            </div>
            <div class="mb-3">
                <label asp-for="Password" class="form-label">Password</label>
                <input asp-for="Password" type="password" class="form-control" id="passwordInput" autocomplete="current-password" required />
            </div>
            <div class="d-grid">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
            <div id="loginError" class="alert alert-danger mt-3 d-none" role="alert"></div>
        </form>
    </div>
</div>

@section Scripts {
    <script>

        document.getElementById('loginForm').addEventListener('submit', async function (e) {
            e.preventDefault();
             e.preventDefault();
    alert("JS is working!"); 
            const username = document.getElementById('usernameInput').value;
            const password = document.getElementById('passwordInput').value;
            const errorDiv = document.getElementById('loginError');
            errorDiv.classList.add('d-none');
            errorDiv.textContent = '';

            try {
                const response = await fetch('/api/auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: username, password: password })
                });

                if (response.ok) {
                    const data = await response.json();
                    if (data && data.token) {
                        localStorage.setItem('jwtToken', data.token);
                           // document.cookie = "jwtToken=" + data.token + "; path=/"; "Secure"; HttpOnly;
                        document.cookie = `jwtToken=${data.token}; path=/; secure; samesite=strict`;
                        window.location.href = '/';
                    } else {
                        errorDiv.textContent = 'Invalid response from server.';
                        errorDiv.classList.remove('d-none');
                    }
                } else {
                    let errorMsg = 'Login failed. Please check your credentials.';
                    try {
                        const errorData = await response.json();
                        if (typeof errorData === 'string') {
                            errorMsg = errorData;
                        } else if (errorData && errorData.message) {
                            errorMsg = errorData.message;
                        }
                    } catch {}
                    errorDiv.textContent = errorMsg;
                    errorDiv.classList.remove('d-none');
                }
            } catch (err) {
                errorDiv.textContent = 'An error occurred. Please try again later.';
                errorDiv.classList.remove('d-none');
            }
        });
    </script>
}

